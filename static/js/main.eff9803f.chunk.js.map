{"version":3,"sources":["Firebase.js","components/WaldoImage.js","components/Highscores.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getData","num","a","isNaN","ref","once","then","snapshot","val","catch","err","console","log","data","getHighScore","dataHS","Object","values","updateHighScore","id","img","update","highscore","name","error","app","WaldoImage","props","_isMounted","bind","state","link","coords","x","y","this","ratios","image","document","getElementById","width","height","Firebase","res","setState","links","calcCoords","e","calcStyle","position","top","left","className","src","alt","style","onClick","handleClick","React","Component","Highscores","getHighScores","n","length","sort","b","map","user","key","updateHS","App","startGame","handleChange","game","found","start","time","Number","MAX_SAFE_INTEGER","username","choice","Date","now","diff","target","value","htmlFor","type","onChange","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.eff9803f.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBDeIhQoJpHLS4uepWszXeZE0z2fna8z2k\",\r\n  authDomain: \"where-s-whaldo.firebaseapp.com\",\r\n  databaseURL: \"https://where-s-whaldo.firebaseio.com\",\r\n  projectId: \"where-s-whaldo\",\r\n  storageBucket: \"where-s-whaldo.appspot.com\",\r\n  messagingSenderId: \"757702852384\",\r\n  appId: \"1:757702852384:web:4b77e37832f1b9ab852145\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.database();\r\n\r\nconst updateHighScore = (num, id, img) => {\r\n  if (!isNaN(num)) {\r\n    id = id === \"\" ? \"Jhon\" : id;\r\n    db.ref(\"highscore/\" + img + \"/\" + id).update(\r\n      {\r\n        highscore: num,\r\n        name: id,\r\n      },\r\n      function (error) {\r\n        if (error) {\r\n          console.log(error + \"\\nhere\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\nconst getData = async (num) => {\r\n  if (isNaN(num)) return false;\r\n\r\n  const data = await db\r\n    .ref(\"imgs/\")\r\n    .once(\"value\")\r\n    .then((snapshot) => {\r\n      return snapshot.val() === null ? {} : snapshot.val();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      return \"\";\r\n    });\r\n  return data;\r\n};\r\n\r\n// not tested needs to be mocked because data is\r\n// always different and bigger every time\r\nconst getHighScore = async () => {\r\n  let dataHS = await db\r\n    .ref(\"highscore/\")\r\n    .once(\"value\")\r\n    .then((snapshot) => {\r\n      return snapshot.val() === null ? {} : snapshot.val();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      return \"\";\r\n    });\r\n  dataHS = Object.values(dataHS);\r\n  return dataHS;\r\n};\r\n\r\nexport default {\r\n  getData,\r\n  getHighScore,\r\n  updateHighScore,\r\n  db: firebase.database(),\r\n  app: firebase.app(),\r\n};\r\n","import \"../css/WaldoImage.scss\";\r\nimport React from \"react\";\r\nimport Firebase from \"../Firebase\";\r\n\r\nexport default class WaldoImage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this._isMounted = false;\r\n    this.getData = this.getData.bind(this);\r\n    this.state = {\r\n      link:\r\n        \"https://static.techspot.com/images2/news/bigimage/2018/08/2018-08-13-image-14.jpg\",\r\n      coords: { x: 0, y: 0 },\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getData(this.props.img);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n  }\r\n\r\n  calcCoords(num) {\r\n    const ratios = [\r\n      { x: 0.791, y: 0.079 },\r\n      { x: 0.478, y: 0.885 },\r\n      { x: 0.635, y: 0.343 },\r\n    ];\r\n    const image = document.getElementById(\"image\");\r\n\r\n    return {\r\n      x: image.width * ratios[num].x,\r\n      y: image.height * ratios[num].y,\r\n    };\r\n  }\r\n\r\n  getData(num) {\r\n    const data = Firebase.getData(num);\r\n    //if all goes according to plan update the state\r\n    data\r\n      .then(\r\n        (res) => {\r\n          this.setState({\r\n            link: res.links[num] ? res.links[num] : res.links[0],\r\n            coords: res.links[num] ? this.calcCoords(num) : { x: 0, y: 0 },\r\n          });\r\n        },\r\n        (e) => {\r\n          console.log(e);\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const calcStyle = {\r\n      position: \"absolute\",\r\n      top: this.state.coords.y,\r\n      left: this.state.coords.x,\r\n      width: \"25px\",\r\n      height: \"25px\",\r\n    };\r\n    return (\r\n      <div className=\"waldoimage\">\r\n        <img id=\"image\" src={this.state.link} alt=\"waldo\"></img>\r\n        <button\r\n          style={calcStyle}\r\n          onClick={this.props.handleClick}\r\n          id=\"target\"\r\n        ></button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Firebase from \"../Firebase\";\r\nimport \"../css/Highscores.scss\";\r\n\r\nexport default class Highscores extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getHighScores = this.getHighScores.bind(this);\r\n    this._isMounted = false;\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this._isMounted && this.getHighScores();\r\n  }\r\n\r\n  getHighScores() {\r\n    const data = Firebase.getHighScore();\r\n    data\r\n      .then(\r\n        (res) => {\r\n          this._isMounted &&\r\n            this.setState({\r\n              data: res,\r\n            });\r\n        },\r\n        (e) => {}\r\n      )\r\n      .catch((e) => {});\r\n  }\r\n\r\n  updateHS(n) {\r\n    return this.state.data.length > 0\r\n      ? Object.values(this.state.data[n])\r\n          .sort((a, b) => a.highscore - b.highscore)\r\n          .map((user) => {\r\n            if (user.name === this.props.user)\r\n              return (\r\n                <p className=\"You\" key={user.name + user.highscore}>\r\n                  {user.name}: {user.highscore}\r\n                </p>\r\n              );\r\n            return (\r\n              <p key={user.name + user.highscore}>\r\n                {user.name}: <span>{user.highscore}</span>\r\n              </p>\r\n            );\r\n          })\r\n      : \"Loading\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Highscores\">\r\n        <h1>Highscores</h1>\r\n        <div className=\"Rows\">\r\n          <div className=\"Row\">\r\n            <h2>Easy</h2>\r\n            {this.updateHS(0)}\r\n          </div>\r\n          <div className=\"Row\">\r\n            <h2>Medium</h2>\r\n            {this.updateHS(1)}\r\n          </div>\r\n          <div className=\"Row\">\r\n            <h2>Hard</h2>\r\n            {this.updateHS(2)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./css/reset.css\";\r\nimport \"./css/App.scss\";\r\nimport React from \"react\";\r\nimport WaldoImage from \"./components/WaldoImage\";\r\nimport Highscores from \"./components/Highscores\";\r\nimport Firebase from \"./Firebase\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.startGame = this.startGame.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      game: false,\r\n      found: false,\r\n      start: 0,\r\n      time: Number.MAX_SAFE_INTEGER,\r\n      username: \"\",\r\n      choice: 0,\r\n    };\r\n  }\r\n\r\n  startGame(num) {\r\n    this.setState({ game: true, start: Date.now(), choice: num });\r\n  }\r\n\r\n  handleClick() {\r\n    const diff = Date.now() - this.state.start;\r\n    if (diff < this.state.time) {\r\n      Firebase.updateHighScore(diff, this.state.username, this.state.choice);\r\n    }\r\n    this.setState({ found: true, time: diff, game: false });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ username: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    return this.state.game === true ? (\r\n      <div className=\"App\">\r\n        <WaldoImage\r\n          img={this.state.choice}\r\n          handleClick={this.handleClick}\r\n        ></WaldoImage>\r\n      </div>\r\n    ) : (\r\n      <div className=\"App\">\r\n        <div className=\"Difficulties\">\r\n          <label htmlFor=\"dif\">Choose difficulty </label>\r\n          <button\r\n            name=\"dif\"\r\n            onClick={() => {\r\n              this.startGame(0);\r\n            }}\r\n          >\r\n            Easy\r\n          </button>\r\n          <button\r\n            name=\"dif\"\r\n            onClick={() => {\r\n              this.startGame(1);\r\n            }}\r\n          >\r\n            Medium\r\n          </button>\r\n          <button\r\n            name=\"dif\"\r\n            onClick={() => {\r\n              this.startGame(2);\r\n            }}\r\n          >\r\n            Hard\r\n          </button>\r\n        </div>\r\n        <div className=\"Input\">\r\n          <label htmlFor=\"name\">Username: </label>\r\n          <input type=\"text\" onChange={this.handleChange} name=\"name\"></input>\r\n        </div>\r\n        <div className=\"WaldoReference\">\r\n          <p>This is the fella you are looking for</p>\r\n          <img\r\n            src=\"http://4.bp.blogspot.com/-UYmP33O3TDY/VgB466m9QDI/AAAAAAAALI8/GNuVqVoUR6A/s1600/03.png\"\r\n            alt=\"Waldo Reference\"\r\n          ></img>\r\n        </div>\r\n        <Highscores user={this.state.username}></Highscores>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}